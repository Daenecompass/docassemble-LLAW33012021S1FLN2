imports:
  - json
---
features:
  css: AP_location.css
---
# Postcodes information is from a database by Matthew Proctor, available
# at https://www.matthewproctor.com/full_australian_postcodes_sa
# This was pasted into excel, converted to a CSV file containing only
# the Postcode and Locality columns, and then a Find+Replace run on
# this CSV file using Notepad++ & Regex:
#   Find: ^(\d+),(.+)$
#   Replace with: \t{"postcode": "$1", "placename": "$2"}
# Then start & end characters were added manually:
#   Start: [
#   End: ]
# And finally the last comma in the list was removed, producing
# a valid json file to use here.
---
objects from file:
  - postcodes: postcodes.json
---
initial: true
code: |
  log("var postcodesDB = " + json.dumps(postcodes.as_serializable()) + ";", "javascript")
---
question: |
  Roughly where were you when you were refused access?
subquestion: |
  **Postcode (enter a postcode, or search by suburb):**
  <span id="postcode-input-container">[FIELD FLNrefusal_postcode]</span>
  
  <div id="postcodes-list"></div>
comment: |
  Incude the section below in the main question body to show the user
  a map of Adelaide. They can't use it to select a location though,
  so we've disabled it for now for being too confusing and annoying.
  Note: HTML comments don't work for this for some reason.
  
  If you're not sure what suburb, you can try browsing this map:
  <div class="refusal-map-container">
  <iframe src="https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d248956.58478148535!2d138.68909503461902!3d-34.93047901614914!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1sen!2sau!4v1620128217527!5m2!1sen!2sau" style="border:0;" allowfullscreen="" loading="lazy" class="refusal-map"></iframe>
  </div>
fields:
  - Postcode: FLNrefusal_postcode
    datatype: raw
script: |
  <script>
    const resultsLimit = 20;
    
    const postcodeInputSpan = document.getElementById('postcode-input-container');
    const postcodeInput = postcodeInputSpan.getElementsByClassName('dainput-embedded')[0];
    const postcodesList = document.getElementById('postcodes-list');
    
    postcodeInput.addEventListener('input', updateSearchList);
    
    function updateSearchList(e) {
      const searchQuery = e.target.value.replace(/\W/g, '');
      
      if (searchQuery.length == 0) {
        postcodesList.innerHTML = '';
        return;
      }
      
      const searchRegex = new RegExp(searchQuery, 'i');
      
      let results = [];
      for (i = 0; i < postcodesDB.elements.length; i++) {
        const entry = postcodesDB.elements[i];
        const entrySearchText = (entry.postcode + entry.placename).replace(/\W/g, '');
        if (searchRegex.test(entrySearchText)) {
          results.push(entry);
        }
        if (results.length >= resultsLimit) {
          break;
        }
      }
      
      postcodesList.innerHTML = results.map(r => '<p><div class="btn btn-da btn-info postcode-search-result" onclick="selectPostcode(' + r.postcode + ')">' + r.postcode + ': ' + r.placename + '</div></p>').join('');
    }
    
    function selectPostcode(postcode) {
      postcodeInput.value = postcode;
      postcodesList.innerHTML = '';
    }
  </script>
---